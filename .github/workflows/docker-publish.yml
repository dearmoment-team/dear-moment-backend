name: Docker Publish

on:
  push:
    branches:
      - main
  workflow_dispatch: { }

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
    steps:
      # 1) 소스코드 체크아웃
      - name: Check out source code
        uses: actions/checkout@v4

      # 2) JDK 설치
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'

      # 3-0) OCI Object Storage Config 설정 (🔹 Docker Build 전)
      - name: Create OCI Config File
        run: |
          mkdir -p ~/.oci
          echo "${{ secrets.OBJECT_STORAGE_CONFIG }}" > ~/.oci/config
          chmod 600 ~/.oci/config

      - name: Create Private Key File
        run: |
          echo "${{ secrets.OBJECT_STORAGE_PRIVATE_KEY }}" > ~/.oci/private_key.pem
          chmod 600 ~/.oci/private_key.pem
          
      - name: Set environment variables
        env:
          MAIL_RECEIVER: ${{ secrets.MAIL_RECEIVER }}
          MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
          MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
          OBJECT_STORAGE_BUCKET_NAME_LOCAL: ${{ secrets.OBJECT_STORAGE_BUCKET_NAME_LOCAL }}
          OBJECT_STORAGE_NAMESPACE_NAME_LOCAL: ${{ secrets.OBJECT_STORAGE_NAMESPACE_NAME_LOCAL }}
          OBJECT_STORAGE_IMAGE_DIR_LOCAL: ${{ secrets.OBJECT_STORAGE_IMAGE_DIR_LOCAL }}
          OBJECT_STORAGE_CONFIG_PATH_LOCAL: ${{ secrets.OBJECT_STORAGE_CONFIG_PATH_LOCAL }}
        run: |
          echo "MAIL_RECEIVER=$MAIL_RECEIVER" >> $GITHUB_ENV
          echo "MAIL_USERNAME=$MAIL_USERNAME" >> $GITHUB_ENV
          echo "MAIL_PASSWORD=$MAIL_PASSWORD" >> $GITHUB_ENV
          echo "OBJECT_STORAGE_BUCKET_NAME_LOCAL=OBJECT_STORAGE_BUCKET_NAME_LOCAL" >> $GITHUB_ENV
          echo "OBJECT_STORAGE_NAMESPACE_NAME_LOCAL=OBJECT_STORAGE_NAMESPACE_NAME_LOCAL" >> $GITHUB_ENV
          echo "OBJECT_STORAGE_IMAGE_DIR_LOCAL=OBJECT_STORAGE_IMAGE_DIR_LOCAL" >> $GITHUB_ENV
          echo "OBJECT_STORAGE_CONFIG_PATH_LOCAL=OBJECT_STORAGE_CONFIG_PATH_LOCAL" >> $GITHUB_ENV

      # 3) Gradle 빌드
      - name: Build using Gradle
        run: ./gradlew build

      # 4) GHCR 로그인 (공식 액션 사용)
      - name: Log in to the Container registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_PAT }}

      # 5) Docker Buildx 설정 (공식 액션 사용)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 6) Docker 이미지 빌드 및 푸시 (Buildx 및 캐시 사용)
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/Dockerfile-prod
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/dear-moment-backend:${{ github.sha }}
            ghcr.io/${{ github.repository }}/dear-moment-backend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
